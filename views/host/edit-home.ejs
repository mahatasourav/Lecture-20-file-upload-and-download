<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("../partials/head") %>
  </head>
  <body class="bg-gray-50">
    <%- include("../partials/host-nav") %>
    <main class="mt-12 px-4">
      <div class="max-w-7xl mx-auto">
        <!-- Stats Summary -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12">
          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-gray-600">Total Properties</h3>
              <svg
                class="h-5 w-5 text-blue-500"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
                />
              </svg>
            </div>
            <p class="text-2xl font-bold text-gray-800">
              <%= homeRegistred.length %>
            </p>
          </div>
          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-gray-600">Active Listings</h3>
              <svg
                class="h-5 w-5 text-green-500"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
            </div>
            <p class="text-2xl font-bold text-gray-800">
              <%= homeRegistred.length %>
            </p>
          </div>
          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-gray-600">Average Rating</h3>
              <svg
                class="h-5 w-5 text-yellow-400"
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path
                  d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
                />
              </svg>
            </div>
            <p class="text-2xl font-bold text-gray-800">4.8</p>
          </div>
          <div class="bg-white p-6 rounded-xl shadow-sm border border-gray-100">
            <div class="flex items-center justify-between mb-2">
              <h3 class="text-gray-600">Total Revenue</h3>
              <svg
                class="h-5 w-5 text-green-500"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
            </div>
            <p class="text-2xl font-bold text-gray-800">₹50,000</p>
          </div>
        </div>

        <div class="flex justify-between items-center mb-8">
          <h1 class="font-bold">
            <span
              class="text-4xl bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"
            >
              Manage Your Properties
            </span>
            <p class="text-gray-500 text-lg font-normal mt-2">
              Edit or remove your registered properties
            </p>
          </h1>
          <a
            href="/host/add-home"
            class="bg-blue-600 text-white px-6 py-2.5 rounded-lg hover:bg-blue-700 transition-colors duration-200 flex items-center gap-2"
          >
            <svg
              class="h-5 w-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 4v16m8-8H4"
              />
            </svg>
            Add New Property
          </a>
        </div>

        <div
          id="propertiesGrid"
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12"
        >
          <% homeRegistred.forEach(home => { %>
          <div
            class="bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100"
          >
            <div class="relative">
              <img
                src="<%= home.image ? home.image : 'https://i.pinimg.com/736x/f0/fc/17/f0fc17618d45910665e1efb85c1c0a72.jpg' %>"
                alt="<%= home.homename %>"
                class="w-full h-56 object-cover"
                onerror="this.src='/path/to/default-image.jpg';"
              />
              <div class="absolute top-3 right-3">
                <span
                  class="bg-white/90 backdrop-blur-sm px-2 py-1 rounded-lg text-sm font-semibold flex items-center gap-1"
                >
                  <%= home.Rating %>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-4 w-4 text-yellow-400"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                  >
                    <path
                      d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
                    />
                  </svg>
                </span>
              </div>
            </div>

            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-800 mb-2">
                <%= home.homename %>
              </h3>
              <div class="flex items-center gap-2 mb-3 text-gray-600">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z"
                    clip-rule="evenodd"
                  />
                </svg>
                <span class="text-sm"><%= home.location %></span>
              </div>
              <div class="text-lg font-bold text-blue-600 mb-6">
                ₹<%= home.price %>
                <span class="text-sm font-normal text-gray-600">per night</span>
              </div>

              <div class="flex gap-4">
                <a
                  href="/host/editAddHome/<%= home._id%>?editing=true"
                  class="flex-1 bg-blue-50 hover:bg-blue-100 text-blue-600 text-center py-2.5 rounded-lg font-semibold transition-colors duration-200"
                >
                  Edit
                </a>
                <form
                  action="/host/delete-home/<%=home._id%>"
                  method="POST"
                  class="flex-1"
                >
                  <button
                    type="submit"
                    class="w-full bg-red-50 hover:bg-red-100 text-red-600 py-2.5 rounded-lg font-semibold transition-colors duration-200"
                  >
                    Delete
                  </button>
                </form>
              </div>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
    </main>

    <!-- Add this script before closing body tag -->
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const sortSelect = document.getElementById("sortSelect");
        const locationFilter = document.getElementById("locationFilter");
        const propertiesGrid = document.getElementById("propertiesGrid");
        const propertyCards = Array.from(propertiesGrid.children);

        function filterProperties() {
          const searchTerm = searchInput.value.toLowerCase().trim();
          const locationTerm = locationFilter.value.toLowerCase().trim();

          propertyCards.forEach((card) => {
            const homeName = card.querySelector("h3").textContent.toLowerCase();
            const location = card
              .querySelector(".text-sm")
              .textContent.toLowerCase();

            let shouldShow = true;

            // Apply search filter if there's a search term
            if (searchTerm) {
              shouldShow = homeName.includes(searchTerm);
            }

            // Apply location filter if there's a location term
            if (locationTerm && shouldShow) {
              shouldShow = location.includes(locationTerm);
            }

            card.style.display = shouldShow ? "" : "none";
          });

          // Update results count
          updateResultsCount();
        }

        function updateResultsCount() {
          const visibleCards = propertyCards.filter(
            (card) => card.style.display !== "none"
          ).length;
          const totalCards = propertyCards.length;

          // Add results count if it doesn't exist, or update if it does
          let resultsCount = document.getElementById("resultsCount");
          if (!resultsCount) {
            resultsCount = document.createElement("div");
            resultsCount.id = "resultsCount";
            resultsCount.className = "text-sm text-gray-600 mt-2";
            propertiesGrid.parentNode.insertBefore(
              resultsCount,
              propertiesGrid
            );
          }

          resultsCount.textContent = `Showing ${visibleCards} of ${totalCards} properties`;
        }

        // Clear filters button
        const clearButton = document.getElementById("clearFilters");
        clearButton.onclick = function () {
          searchInput.value = "";
          locationFilter.value = "";
          sortSelect.value = "";
          filterProperties();
        };

        // Initialize results count
        updateResultsCount();

        // Event listeners
        searchInput.addEventListener("input", filterProperties);
        locationFilter.addEventListener("input", filterProperties);
        locationFilter.addEventListener("change", filterProperties);

        // Sort functionality
        sortSelect.addEventListener("change", function (e) {
          const sortValue = e.target.value;
          const sortedCards = [...propertyCards];

          sortedCards.sort((a, b) => {
            const priceA = parseFloat(
              a.querySelector(".text-blue-600").textContent.replace("₹", "")
            );
            const priceB = parseFloat(
              b.querySelector(".text-blue-600").textContent.replace("₹", "")
            );
            const ratingA = parseFloat(
              a.querySelector(".bg-white\\/90").textContent
            );
            const ratingB = parseFloat(
              b.querySelector(".bg-white\\/90").textContent
            );

            switch (sortValue) {
              case "price_asc":
                return priceA - priceB;
              case "price_desc":
                return priceB - priceA;
              case "rating":
                return ratingB - ratingA;
              default:
                return 0;
            }
          });

          // Clear and re-append sorted items
          propertiesGrid.innerHTML = "";
          sortedCards.forEach((card) => {
            if (card.style.display !== "none") {
              propertiesGrid.appendChild(card);
            }
          });
        });
      });
    </script>
  </body>
</html>
